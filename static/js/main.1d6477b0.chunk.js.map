{"version":3,"sources":["components/TabsPage.tsx","components/HomePage.tsx","App.tsx","index.tsx"],"names":["TabsPage","React","memo","tabs","tabId","useParams","selectedTab","find","tab","id","className","map","isActive","classNames","to","title","content","HomePage","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"iRAeaA,EAA4BC,IAAMC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC7CC,EAAUC,cAAVD,MACFE,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAEhD,OACE,gCACE,2CACA,qBAAKM,UAAU,YAAf,SACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,cAAC,IAAD,CACEE,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,wBACtC,CAAE,gCAAiCD,KAErCE,GAAE,gBAAWN,EAAIC,IAJnB,SAMGD,EAAIO,OAHAP,EAAIC,SAOf,qBAAKC,UAAU,YAAf,SACGJ,EACGA,EAAYU,QACZ,qBCnCCC,EAAqBhB,IAAMC,MAAK,WAC3C,OACE,8BACE,oBAAIa,MAAM,OAAV,4BCgBAZ,EAAO,CACX,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAuB3BE,EApBO,WACpB,OACE,sBAAKR,UAAU,MAAf,UACE,8BACE,sBAAKA,UAAU,MAAf,UACE,cAAC,IAAD,CAASA,UAAU,YAAYI,GAAG,IAAlC,uBACA,cAAC,IAAD,CAASJ,UAAU,YAAYI,GAAG,QAAlC,4BAIJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,KAAK,IAAIC,QAAS,cAACH,EAAD,MACzB,cAAC,IAAD,CAAOE,KAAK,QAAQC,QAAS,cAAC,EAAD,CAAUjB,KAAMA,MAC7C,cAAC,IAAD,CAAOgB,KAAK,eAAeC,QAAS,cAAC,EAAD,CAAUjB,KAAMA,aCpC5DkB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1d6477b0.chunk.js","sourcesContent":["import React from 'react';\nimport './TabsPage.scss';\nimport { useParams, NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Tab[],\n};\n\nexport const TabsPage: React.FC<Props> = React.memo(({ tabs }) => {\n  const { tabId } = useParams<{ tabId: string }>();\n  const selectedTab = tabs.find(tab => tab.id === tabId);\n\n  return (\n    <div>\n      <h2>Tabs Page</h2>\n      <div className=\"container\">\n        {tabs.map(tab => (\n          <NavLink\n            className={({ isActive }) => classNames('container__title-link',\n              { 'container__title-link--active': isActive })}\n            key={tab.id}\n            to={`/tabs/${tab.id}`}\n          >\n            {tab.title}\n          </NavLink>\n        ))}\n      </div>\n      <div className=\"link-info\">\n        {selectedTab\n          ? selectedTab.content\n          : 'Select Tab'}\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\n\nexport const HomePage: React.FC = React.memo(() => {\n  return (\n    <div>\n      <h2 title=\"home\">Home Page</h2>\n    </div>\n  );\n});\n","import './App.scss';\nimport { Route, Routes, NavLink } from 'react-router-dom';\nimport { TabsPage } from './components/TabsPage';\nimport { HomePage } from './components/HomePage';\n\n/*\nimport { RouteComponentProps } from 'react-router-dom';\n\ntype TabsPageProps = React.FC<RouteComponentProps<{ tabId: string }>>;\nconst TabsPage: TabsPageProps = ({ match }) => {...};\n\nor\n\nimport { useParams } from 'react-router-dom';\n\nconst TabsPage = () => {\n  const { tabId } = useParams<{ tabId: string }>();\n  ...\n};\n*/\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <nav>\n        <div className=\"nav\">\n          <NavLink className=\"nav__link\" to=\"/\">Home Page</NavLink>\n          <NavLink className=\"nav__link\" to=\"/tabs\">Tabs Page</NavLink>\n        </div>\n      </nav>\n\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/tabs\" element={<TabsPage tabs={tabs} />} />\n        <Route path=\"/tabs/:tabId\" element={<TabsPage tabs={tabs} />} />\n      </Routes>\n\n    </div>\n  );\n};\n\nexport default App;\n","import { HashRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}